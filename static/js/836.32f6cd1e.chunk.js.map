{"version":3,"file":"static/js/836.32f6cd1e.chunk.js","mappings":"yQAEaA,E,OAAOC,EAAAA,KAAH,mF,SCKJC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAoCJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA0CN,EAAAA,EAAAA,WAAS,GAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KACA,GAA0BR,EAAAA,EAAAA,UAAS,IAAnC,eAAOS,EAAP,KAAcC,EAAd,KACA,GAAgCV,EAAAA,EAAAA,UAAS,IAAzC,eAAOW,EAAP,KAAiBC,EAAjB,KAyBA,OACE,UAACjB,EAAD,CAAMkB,YAAU,EAACC,SAzBE,SAAAC,GAGnB,GAFAA,EAAEC,iBAEkB,KAAjBP,EAAMQ,QAAiC,KAAhBhB,EAAKgB,OAG7B,OAFAX,GAAc,GACdF,GAAa,GACNc,EAAAA,GAAAA,MAAY,2CAErB,GAAGP,EAASQ,OAAS,EAEnB,OADAX,GAAiB,GACVU,EAAAA,GAAAA,MAAY,iDAGrB,IAAME,EAAOL,EAAEM,cACfvB,GACEwB,EAAAA,EAAAA,IAAS,CACPrB,KAAMmB,EAAKG,SAAStB,KAAKuB,MACzBf,MAAOW,EAAKG,SAASd,MAAMe,MAC3Bb,SAAUS,EAAKG,SAASZ,SAASa,SAGrCJ,EAAKK,OACN,EAG0CC,aAAa,MAAtD,WACE,SAACC,EAAA,EAAD,CACEC,SAAU,SAACb,GAAD,OAAOb,EAAQa,EAAEc,OAAOL,MAAxB,EACVM,MAAM,WACNC,QAAQ,WACRC,KAAK,QACL/B,KAAK,OACLgC,KAAK,OACLC,UAAQ,EACRC,GAAI,CAAEC,GAAI,QAEVC,MAAOlC,KAET,SAACwB,EAAA,EAAD,CACEC,SAAU,SAACb,GAAD,OAAOL,EAASK,EAAEc,OAAOL,MAAzB,EACVM,MAAM,QACNC,QAAQ,WACRC,KAAK,QACL/B,KAAK,QACLgC,KAAK,QACLC,UAAQ,EACRC,GAAI,CAAEC,GAAI,QAEVC,MAAOhC,KAGT,SAACsB,EAAA,EAAD,CACEC,SAAU,SAACb,GAAD,OAAOH,EAAYG,EAAEc,OAAOL,MAA5B,EACVM,MAAM,WACNC,QAAQ,WACRC,KAAK,QACL/B,KAAK,WACLgC,KAAK,WACLC,UAAQ,EACRC,GAAI,CAAEC,GAAI,QACVC,MAAO9B,KAET,SAAC+B,EAAA,EAAD,CAAQP,QAAQ,YAAYE,KAAK,SAAjC,wBAGL,E,sCC5Ec,SAASM,IACtB,OACE,UAACC,EAAA,EAAD,CACAL,GAAI,CACFM,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,QAAS,QALX,WAQA,SAACC,EAAA,EAAD,CAAQV,GAAI,CAAEW,EAAE,EAAGC,QAAS,kBAA5B,UACE,SAACC,EAAA,EAAD,OAGE,SAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKmB,UAAU,KAAKf,GAAI,CAAEC,GAAI,QAAlD,2BAEF,SAACvC,EAAD,MAGL,C,0BCrBGsD,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,gOACD,gBACJN,EAAQ,EAAUG,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js","../node_modules/@mui/icons-material/LockOutlined.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\npadding: 0 15px;\n`;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { TextField, Button } from '@mui/material';\nimport toast from 'react-hot-toast';\nimport { Form } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    if(email.trim() === '' || name.trim() === '') {\n      setEmailError(true);\n      setNameError(true);\n      return toast.error('ðŸ’© Please fill in all fields!');\n    }\n    if(password.length < 7) {\n      setPasswordError(true);\n      return toast.error('Passwords must be at least 7 characters long!');\n    }\n    \n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form noValidate onSubmit={handleSubmit} autoComplete=\"off\">\n      <TextField\n        onChange={(e) => setName(e.target.value)}\n        label=\"Username\"\n        variant=\"outlined\"\n        size=\"small\"\n        name=\"name\"\n        type=\"text\"\n        required\n        sx={{ mb: '20px' }}\n        \n        error={nameError}\n      />\n      <TextField\n        onChange={(e) => setEmail(e.target.value)}\n        label=\"Email\"\n        variant=\"outlined\"\n        size=\"small\"\n        name=\"email\"\n        type=\"email\"\n        required\n        sx={{ mb: '20px' }}\n\n        error={emailError}\n\n      />\n      <TextField\n        onChange={(e) => setPassword(e.target.value)}\n        label=\"Password\"\n        variant=\"outlined\"\n        size=\"small\"\n        name=\"password\"\n        type=\"password\"\n        required\n        sx={{ mb: '20px' }}\n        error={passwordError}\n      />\n      <Button variant=\"contained\" type=\"submit\">Register</Button>\n    </Form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Box, Typography, Avatar } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nexport default function Register() {\n  return (\n    <Box\n    sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: '20px' \n    }}\n    >\n    <Avatar sx={{ m:1, bgcolor: 'secondary.main'}}>\n      <LockOutlinedIcon />\n    </Avatar>\n      \n        <Typography variant=\"h5\" component=\"h2\" sx={{ mb: '16px' }}>Registration</Typography>\n      \n      <RegisterForm />\n    </Box>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\nexports.default = _default;"],"names":["Form","styled","RegisterForm","dispatch","useDispatch","useState","name","setName","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","email","setEmail","password","setPassword","noValidate","onSubmit","e","preventDefault","trim","toast","length","form","currentTarget","register","elements","value","reset","autoComplete","TextField","onChange","target","label","variant","size","type","required","sx","mb","error","Button","Register","Box","display","flexDirection","alignItems","padding","Avatar","m","bgcolor","LockOutlined","Typography","component","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}